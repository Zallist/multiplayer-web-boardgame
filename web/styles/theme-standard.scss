@import "_mixins";

// Variables
$backgroundColor: #192E58;
$lightBackgroundColor: rgb(235,249,254);
$panelBackgroundColor: rgb(63,166,221);
$panelBorderColor: rgb(27,117,186);
$btnPrimaryColor: #b1ed58;
$btnSecondaryColor: #95a5a6;

// Default fonts
button, h1, h2, h3, h4, h5, h6, label, .input-group-text {
    font-family: 'Luckiest Guy', sans-serif;
}

.game-information {
    font-family: 'Fredoka One', sans-serif;
    font-weight: normal;
}

body {
    background-color: $backgroundColor;
    overflow: hidden;
}

#app {
    border-radius: 32px;
    border: 16px solid $panelBorderColor;
    margin: 8px 16px;
    height: calc(100% - 16px) !important;

    @function appendLinearGradient($list, $deg, $start, $stop, $color) {
        @return append($list, linear-gradient($deg, transparent 0, transparent $start, $color $start, $color $stop, transparent $stop), comma);
    }
    
    $background: ();

    $waffleColor: rgb(39,152,204);
    $waffleBorder: rgb(61,173,221);
    $background: appendLinearGradient($background, 180deg, 48px, 58px, $waffleColor);
    $background: appendLinearGradient($background, 90deg, 48px, 58px, $waffleColor);
    $background: appendLinearGradient($background, 180deg, 46px, 48px, $waffleBorder);
    $background: appendLinearGradient($background, 90deg, 46px, 48px, $waffleBorder);
    $background: appendLinearGradient($background, 180deg, 58px, 60px, $waffleBorder);
    $background: appendLinearGradient($background, 90deg, 58px, 60px, $waffleBorder);
    $background: append($background, $panelBackgroundColor, comma);
    
    background: $background;

    background-size: 60px 60px;
    background-position: center center;

    padding: 8px;
}

#app-content {
    position: relative;
    overflow: hidden !important;

    &:before {        
        @include hardware;

        content: "";
        position: absolute;
        height: 300%;
        width: 300%;
        background: linear-gradient(
            transparent 45%, 
            rgba(255, 255, 255, 0.05) 45%,  
            rgba(255, 255, 255, 0.05) 50%, 
            transparent 50%,
            
            transparent 52%, 
            rgba(255, 255, 255, 0.05) 52%,  
            rgba(255, 255, 255, 0.05) 53%, 
            transparent 53%
        );
        transform: rotate(-45deg);

        transition: left,top linear 2s;

        top: -140%;
        left: -120%;
        @keyframes shine {
            0% { left: -200%; top: -200%; }
            50% { left: -30%; top: -30%; }
            51% { left: -200%; top: -200%; }
            100% { left: -120%; top: -140%; }
        }

        animation: shine 5s 1 ease-out;
    }
}

.game__wrap {
    background-image: url('images/standard/game_panel_background.svg');
    background-repeat: no-repeat;
    background-size: 100% 100%;

    @include padChild(6.8%,6.8%,10%,9.6%);
}

.btn[class*="btn-outline-"] {
    background-color: transparent;
    background-image: url('images/standard/button_full.svg');
    background-repeat: no-repeat;
    background-size: 100% 100%;
    border: none;
    background-color: transparent;
    box-shadow: none !important;

    &:hover:not(:disabled) {
        background-color: transparent;
        background-image: url('images/standard/button_full_hover.svg');
    }

    &:active {
        background-color: transparent;
        background-image: url('images/standard/button_full_active.svg');
    }
}

.config__help-text {
    color: #222 !important;
}

/* customize scrollbar css */
* {
    &::-webkit-scrollbar {
        width: 12px;
        background-color: transparent;
    }

    &::-webkit-scrollbar:horizontal {
        height: 12px;
    }

    &::-webkit-scrollbar-track {
        background-color: #083a4f;
        border: none;
        border-radius: 16px;
    }

    &::-webkit-scrollbar-thumb {
        background-color: #277EBC;
        border: none;
        border-radius: 16px;
    }

    &::-webkit-scrollbar-thumb:hover {
        background-color: #1386b5;
        border: none;
    }

    &::-webkit-scrollbar-thumb:active {
        background-color: #005c82;
        border: none;
    }
}

// Secondary styling
h1 {
    @include stroke(4,$backgroundColor);
    color: #FFF;
}

.input-group {
    border: 4px solid $backgroundColor;
    border-radius: 4px;

    input {
        box-shadow: none !important;
    }
    .input-group-text {
        background-color: $panelBackgroundColor;
        color: #FFF;
        border: none;
        @include stroke(2, $backgroundColor);
    }
}

.btn {
    &.btn-primary,&.btn-secondary {
        background: transparent !important;
        border: none !important;
        box-shadow: none !important;

        line-height: 1em;
        padding-top: 0;
        padding-bottom: 0;

        @include stroke(2, $backgroundColor);

        &.btn-lg {
            font-size: 300%;
            @include stroke(4, $backgroundColor);
        }

        &.btn-primary {
            color: $btnPrimaryColor;
            
            &:not(:disabled) {
                &:hover, &:active {
                    color: lighten($color: $btnPrimaryColor, $amount: 20%);
                }
            }
        }

        &.btn-secondary {
            color: $btnSecondaryColor;
            
            &:not(:disabled) {
                &:hover, &:active {
                    color: lighten($color: $btnSecondaryColor, $amount: 20%);
                }
            }
        }
    }
    &.btn-icon {
        background: #FFF !important;
        border: $backgroundColor 8px solid !important;
        box-shadow: 0px 8px 0 transparentize($color: $backgroundColor, $amount: 0.2) !important;

        border-radius: 50%;
        font-size: 3em;
        line-height: 1em;
        padding: 8px;

        width: 1.75em; height: 1.75em;
        text-align: center;

        @mixin addButton($className, $url) {
            &.#{$className} {
                & > i {
                    display: block;

                    @if ($url) {
                        background-image: url($url);
                    }
                    @include fillBackgroundImage(true);
                    @include removeIconContent;
                }

                @content;
            }
        }

        @include addButton('btn-config', 'images/standard/icons/cog.svg');
        @include addButton('btn-stats', 'images/standard/icons/trophy.svg');
        @include addButton('btn-help', 'images/standard/icons/questionmark.svg');
        @include addButton('btn-puzzle-piece', 'images/standard/icons/piecepicker.svg');
        @include addButton('btn-face', 'images/standard/icons/face.svg') {
            background-color: $btnPrimaryColor !important;
        }
        @include addButton('btn-color-wheel', 'images/standard/icons/colorpicker.svg');
        @include addButton('btn-refresh', 'images/standard/icons/refresh.svg');
        @include addButton('btn-cancel', 'images/standard/icons/cancel.svg');

        @include addButton('btn-icon--populated', null);

        &:not(:disabled) {
            &:hover, &:active {
                $color: lighten($color: $backgroundColor, $amount: 20%);
    
                color: $color !important;
                border-color: $color !important;
                box-shadow: 0px 8px 0 transparentize($color: $color, $amount: 0.2) !important;
            }
        }
    }
}

.customization__item {
    position: relative;

    &.customization__item--locked {
        opacity: 1.0;
        border-color: #A0A0A0 !important;

        &:after {
            @include pseudo;
            position: absolute;
            top: 0; bottom: 0;
            left: 0; right: 0;
            background-image: url("data:image/svg+xml,%3Csvg aria-hidden='true' focusable='false' data-prefix='fas' data-icon='lock' role='img' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 448 512' class='svg-inline--fa fa-lock fa-w-14 fa-3x'%3E%3Cpath fill='A0A0A0' d='M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z' class=''%3E%3C/path%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: center center;
            background-size: 75% 75%;
            opacity: 0.5;
        }
    }
}

.turn__tracker__header {
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    background-image: url('images/standard/turn_tracker_background.svg');
    height: 80px;
    margin-bottom: -30px;
    position: relative;

    h1 {
        font-size: 24px;
        position: absolute;
        top: 20px;
        left: 26px;
        transform: rotate(-3deg);
    }
}

.avatar__box {
    background:
        radial-gradient(ellipse at center top, #FFF 0%, #FFF 25%, $lightBackgroundColor 25%),
        $lightBackgroundColor;
    background-size: 500% 200%;
    background-position: center top;
    background-repeat: no-repeat;

    border: 8px solid $backgroundColor;
    border-top-left-radius: 15% 50%;
    border-top-right-radius: 15% 50%;
    border-bottom-left-radius: 15% 50%;
    border-bottom-right-radius: 15% 50%;

    position: relative;
    overflow: hidden;

    .avatar {
        position: absolute;
        top: 8px; bottom: 8px;
        left: 8px; right: 8px;
    }
    
    @mixin insetBoxShadow($color) {
        box-shadow: 0px 0px 0px 4px inset $color,
            0px 8px 0 transparentize($color: $backgroundColor, $amount: 0.2);
    }

    @include insetBoxShadow($panelBorderColor);

    &.avatar__box--spectating { @include insetBoxShadow(#7f8c8d); }
    &.avatar__box--turn { @include insetBoxShadow(#e74c3c); }
    &.avatar__box--ready { @include insetBoxShadow(#e67e22); }
    &.avatar__box--me { @include insetBoxShadow(#8e44ad); }
    &.avatar__box--me.avatar__box--turn { @include insetBoxShadow(#27ae60); }
    
    .player__avatar__name {
        position: absolute;
        bottom: 0;
        left: 50%;
        max-width: 100%;
        transform: translateX(-50%);
        font-size: 8px;
        font-weight: bold;
        white-space: nowrap;
        text-overflow: clip;
        background: transparent;

        opacity: 0.65;
        color: #FFF;
        @include stroke(2, #000);
    }
    

    .player__avatar__stats {
        .fa-cross {
            background-image: url('images/standard/icons/skulllose.svg');
            @include fillBackgroundImage(true);
            @include removeIconContent;
        }
        .fa-trophy {
            background-image: url('images/standard/icons/trophy.svg');
            @include fillBackgroundImage(true);
            @include removeIconContent;
        }
    }
}

.chat__message, .chat__message-name, .chat__message-message {
    font-family: 'Luckiest Guy', sans-serif;
    font-weight: normal !important; 
    @include stroke(1,#000);

    &.dark {
        text-shadow: none !important;
    }
}
.chat__box {
    background:
        radial-gradient(ellipse at center top, #FFF 0%, #FFF 25%, $lightBackgroundColor 25%),
        $lightBackgroundColor;
    background-size: 500% 200%;
    background-position: center top;
    background-repeat: no-repeat;

    border: 8px solid $backgroundColor;
    border-top-left-radius: 10% 50%;
    border-top-right-radius: 10% 50%;
    border-bottom-left-radius: 10% 50%;
    border-bottom-right-radius: 10% 50%;

    position: relative;
    overflow: hidden;

    box-shadow: 0px 0px 0px 4px inset $panelBorderColor,
        0px 8px 0 transparentize($color: $backgroundColor, $amount: 0.2);

    .chat__messages {
        position: absolute;
        top: 4px; bottom: 24px;
        left: 5%; right: 5%;
        height: auto;
        padding: 0 4px;
    }
}
.chat__entry {    
    position: absolute;
    bottom: 0;
    left: 24px;
    right: 24px;
    background: $backgroundColor;
    overflow: hidden;
    width: auto;
    margin: 0 !important;
}

.modal-content {
    background: transparent;
    border: none;
}
.modal-header {
    border: none;
    
    .modal-title, .close {
        @include stroke(2,#000);
        color: #FFF;
        font-size: 2rem;
    }
}
.modal-body {
    background: $panelBackgroundColor;
    border: 8px solid $backgroundColor;
    border-top-left-radius: 16px;
    border-top-right-radius: 16px;
    border-bottom-left-radius: 50% 32px;
    border-bottom-right-radius: 50% 32px;

    padding-bottom: 32px;
}
.modal-footer {
    border: none;
    margin-top: -32px;
    padding: 0;
    z-index: 1;
}

.modal-dialog.modal-dialog--config {
    .modal-header {
        background-image: url('images/standard/game_config_panel_stripped.svg');
        background-size: 100% 243%;
        height: 160px;
    }
    .modal-body {
        border-top: none;
        border-top-left-radius: 0;
        border-top-right-radius: 0;
    }
}

.modal-dialog.modal-dialog--game-over {
    .modal-body {
        border: none;
        border-radius: 0;
        padding: 0;
        margin: 0;
        background: transparent;
    }
    .modal-footer {
        margin: 0;
    }
    

    .game__over__reason {
        height: 50vh;
        background-image: url('images/standard/game_over_tie.svg');
        background-repeat: no-repeat;
        background-size: 100% 100%;
        background-position: center center;

        & > * { display: none; }

        &.game__over__reason--my-win {
            background-image: url('images/standard/game_over_win.svg');
        }

        &.game__over__reason--my-loss {
            background-image: url('images/standard/game_over_loss.svg');
        }

        &.game__over__reason--tie {
            background-image: url('images/standard/game_over_tie.svg');
        }
    }
}

.picker-arrow {
    .picker-arrow-content {
        display: none;
    }

    &.picker-arrow--left:after,
    &.picker-arrow--right:after {
        content: '';
        display: block;
        width: 60px;
        height: 60px;
        background-image: url('images/standard/right_arrow_border.svg') !important;
        background-repeat: no-repeat;
        background-size: contain !important;
        background-position: center center !important;
    }
    &.picker-arrow--left:after {
        transform: scaleX(-1);
    }
}