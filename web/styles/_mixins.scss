

@mixin padChild($top,$bottom,$left,$right) {
    position: relative;
    & > * {
        position: absolute;
        top: $top; bottom: $bottom;
        left: $left; right: $right;
        height: auto !important;
    }
}

@mixin fillBackgroundImage($size: false) {
    @if $size {
        width: 100%;
        height: 100%;
    }

    background-repeat: no-repeat;
    background-position: center center;
    background-size: contain;
    mask-repeat: no-repeat;
    mask-position: center center;
    mask-size: contain;
    -webkit-mask-repeat: no-repeat;
    -webkit-mask-position: center center;
    -webkit-mask-size: contain;
}

@mixin removeIconContent() {
    &:before { content: ''; }
}


@mixin pseudo($display: block, $pos: absolute, $content: ''){
    content: $content;
    display: $display;
    position: $pos;
}

@mixin responsive-ratio($x,$y, $pseudo: true) {
    $padding: unquote( ( $y / $x ) * 100 + '%' );
    @if $pseudo {
        &:before {
            @include pseudo($pos: relative);
            width: 100%;
            padding-top: $padding;
        }
    } @else {
        padding-top: $padding;
    }
}

@mixin stroke($width, $color) {
    $width: ($width + 0) * 4;
    $shadow: 0 0 0 transparent;
    $i: 0;
    $w: 1;

    @while ($i < $width) {
        $i: $i + 1;
        $j: 0;
        $w: $w + 2;

        @for $r from 1 through $w {
            @for $c from 1 through $w {
                $x: $c - ceil($w / 2);
                $y: $r - ceil($w / 2);

                $shadow: #{$shadow}, #{$x/40}em #{$y/40}em 0 $color;
            }
        }
    }

    text-shadow: $shadow;
}

@mixin hardware($backface: true, $perspective: 1000) {
    @if $backface {
        backface-visibility: hidden;
    }
    perspective: $perspective;
}